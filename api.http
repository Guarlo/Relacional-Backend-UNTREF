@baseUrl = http://localhost:3000/apicontenido



### Bienvenida
GET http://localhost:3000/

### Bienvenida
GET http://localhost:3000/apicontenido/



################################
##  CONTENIDO
################################


### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/74

### Get contenido por Id y relaciones full
GET http://localhost:3000/apicontenido/contenido/74/full


### Get contenidos por Id de actor
# Todas la obras de un actor en particular
GET http://localhost:3000/apicontenido/contenido/actor/2


### Get de todos los contenidos. Sin discriminar!
GET {{baseUrl}}/contenido


### Get de todos los contenidos, y opcinal consulta por:
  # Categoría: 1 (Id de la categoría en la base de datos: 1=Serie / 2=Película) 
  # Genero: Sci-Fi
  # Reparto: Pedro Pascal
  # Búsqueda: Suspenso
### Valores de los parámetros
@categoria = 1
@genero = Sci-Fi
@reparto = Pedro Pascal
@busqueda = Suspenso
### Obtener contenidos filtrados por parámetros específicos
GET {{baseUrl}}/contenido?categoria={{categoria}}&genero={{genero}}&reparto={{reparto}}&busqueda={{busqueda}}


### Valores de los parámetros. Solo genero
@genero = Sci-Fi
### Obtener contenidos filtrados por parámetros específicos
GET {{baseUrl}}/contenido?genero={{genero}}


##
#  No llegué con las busquedas parciales como por ejemplo:
#   >  @reparto = Pedro 
#  y que encuentre todos los Pedro, incluido "Pedro Pascal"
##



### Crear un contenido.
# En este caso, ya eiste y da: HTTP/1.1 409 Conflict
POST http://localhost:3000/apicontenido/contenido/
Content-Type: application/json

  {
    "id": 17,
    "poster": "./posters/17.jpg",
    "titulo": "Halt and Catch Fire",
    "categoria_id": "Serie",
    "genero": [
      "Ficción",
      "Drama",
      "Tecnología"
    ],
    "busqueda": [
      "Halt and Catch Fire",
      "Ficción",
      "Drama",
      "Tecnología",
      "Lee Pace",
      "Scoot McNairy",
      "Mackenzie Davis",
      "Kerry Bishé",
      "Toby Huss",
      "Alana Cavanaugh"
    ],
    "resumen": "Situada en los inicios de la década de 1980, un visionario ficticio, un ingeniero electrónico y una prodigiosa ingeniera, se alían a una programadora de software para confrontar con las corporaciones informáticas dominantes de la época. El Personal de la firma y sus socios de negocio, comenzarán una carrera que cambiará la cultura en el Estado de Texas, cuna de las empresas de tecnología, casi de la misma forma que lo es hoy Silicon Valey. \n Esta historia ficticia emula el trabajo realizado, en su momento, por la firma Compaq, cuando clonó el BIOS de las Computadoras Personales IBM, dando vida así al económico mercado de los clones. Mostrando también, a lo largo de sus 4 temporadas, el nacimiento de la arquitectura abierta de hardware, los videojuegos online, las salas de chat y de trueque de productos físicos, los BBS, y las primeras nubes computacionales, hasta la llegada de Internet (sin dejar afuera la guerra de los web browsers).",
    "temporadas": 4,
    "reparto": [
      "Lee Pace",
      "Scoot McNairy",
      "Mackenzie Davis",
      "Kerry Bishé",
      "Toby Huss",
      "Alana Cavanaugh"
    ],
    "trailer": "https://www.youtube.com/embed/pWrioRji60A",
    "duracion": 0
  }

# Crear un contenido.
# No acepta parámetros 
# Si se pasa el ID en el body, trata de usarlo, si existe da error. 
# Si no se pasa el ID en el body, busca un id libre.
# permite usar ID o Nombres/Terminos para las relaciones.
# Si uno de los Id de relaciones no existe en la DB da un error
# y si se pasa una descripción, se la busca en su tabla y si no existe,
# se la da de alta en la tabla correspondiemnte.

### CASO CON ID !!!
POST http://localhost:3000/apicontenido/contenido/
Content-Type: application/json

{
  "id": 101,
  "poster": "./posters/101.jpg",
  "titulo": "101 dalmatas",
  "categoria_id": "Película",
  "genero": [2, 12, 13, "Dálmatas"],
  "busqueda": [3, 89, 99, 1124, 1125, 1126, 1127, 1128, "101 dálmatas"],
  "resumen": "Los Dálmatas son 101",
  "temporadas": 0,
  "duracion": 101,
  "reparto": [826, 827, 828, 829, 830, 831, 832, 833, 834, "Perros Dálmatas"],
  "trailer": "https://www.youtube.com/embed/G388UMkJIBE"
}   

### Get contenido por Id y relaciones full
GET http://localhost:3000/apicontenido/contenido/101/full

### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/101


### CASO SIN ID !!!
POST http://localhost:3000/apicontenido/contenido/
Content-Type: application/json

{
  "id": 0,
  "poster": "./posters/10x.jpg",
  "titulo": "10x dalmatas",
  "categoria_id": "Película",
  "genero": [2, 12, 13, "Dálmatas"],
  "busqueda": [3, 89, 99, 1124, 1125, 1126, 1127, 1128, "10x dálmatas"],
  "resumen": "Los Dálmatas son cualquier ID",
  "temporadas": 0,
  "duracion": 101,
  "reparto": [826, 827, 828, 829, 830, 831, 832, 833, 834, "Perros Dálmatas"],
  "trailer": "https://www.youtube.com/embed/G388UMkJIBE"
}   

### Get contenido por Id y relaciones full
GET http://localhost:3000/apicontenido/contenido/102/full


### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/102


### Actualizar un contenido. COMPLETO !!!
# Para este caso, cambia el nonmbre, duracion y 
# se saca de busqueda el id:1128 !!!
# Si el id de params no coincide con el elemento "id":, da un error!
PUT http://localhost:3000/apicontenido/contenido/101
Content-Type: application/json

{
  "id": 101,
  "poster": "./posters/101.jpg",
  "titulo": "101 dálmatas con manchas NEGRAS",
  "categoria_id": "Película",
  "genero": [2, 12, 13, "Dálmatas"],
  "busqueda": [3, 89, 99, 1124, 1125, 1126, 1127, "101 dálmatas"],
  "resumen": "Los Dálmatas son 101 (PUT)",
  "temporadas": 0,
  "duracion": 102,
  "reparto": [826, 827, 828, 829, 830, 831, 832, 833, 834],
  "trailer": "https://www.youtube.com/embed/G388UMkJIBE"
}   

####################################################################
# Resultados pos PUT
# "titulo": "101 dálmatas con manchas NEGRAS",
# "duracion": 102
# se quitó el id:1128 en busqueda
##################################################################
#{
#  "id": 101,
#  "poster": "./posters/101.jpg",
#  "titulo": "101 dálmatas con manchas NEGRAS",
#  "categoria_id": 2,
#  "resumen": "Los Dálmatas son 101 (PUT)",
#  "temporadas": 0,
#  "duracion": 102,
#  "trailer": "https://www.youtube.com/embed/G388UMkJIBE",
#  "generoIds": [ 2, 12, 13, 25 ],
#  "busquedaIds": [ 3, 89, 99, 1124, 1125, 1126, 1127, 1130 ],
#  "repartoIds": [ 826, 827, 828, 829, 830, 831, 832, 833, 834 ]
#}


### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/101


##################################
# Actualizar un contenidos parcialmente
# se cambia "titulo": "101 dálmatas con manchas BLANCAS II"
# Hago que "id": sea obligatorio en el body y la URL  { id } = req.params
#  y además deben coincidir para que no de un error.
##################################
PATCH http://localhost:3000/apicontenido/contenido/101
Content-Type: application/json

{
  "id": 101,
  "titulo": "101 dálmatas con manchas BLANCAS II",
  "resumen": "Los Dálmatas son 101 (PATCH)"
}

### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/101

##################################
# Actualizar un contenidos parcialmente con datos vacios
# Da un error al mandar "titulo": "" sin datos, pero admite
# "poster": "" ya que además de ser opcional permite nulo y "". 
# Hago que "id": sea obligatorio en el body y la URL  { id } = req.params
#  y además deben coincidir para que no de un error.
##################################

### CASO CON ERRORES
PATCH http://localhost:3000/apicontenido/contenido/101
Content-Type: application/json

{
  "id": 101,
  "poster": "",
  "titulo": ""
}

### CASO SIN ERRORES
PATCH http://localhost:3000/apicontenido/contenido/101
Content-Type: application/json

{
  "id": 101,
  "poster": "",
  "titulo": "101 dálmatas con manchas BLANCAS II",
  "resumen": "Los Dálmatas son 101 (PATCH) SIN ERRORES"
}

### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/101



################################
### Delete contenido por Id
################################
#  Delete !!!!!!!! OJO!
################################
DELETE http://localhost:3000/apicontenido/contenido/101
################################
DELETE http://localhost:3000/apicontenido/contenido/102

### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/101

### Get contenido por Id con array numérico en relaciones
GET http://localhost:3000/apicontenido/contenido/102




################################
##  GENEROS
################################

### Get de todos los generos
GET http://localhost:3000/apicontenido/generos

### Get generos por Id
GET http://localhost:3000/apicontenido/generos/24


### Crear un genero
POST http://localhost:3000/apicontenido/generos
Content-Type: application/json

{
  "nombre": "comi-trágico"
}

### Get generos por Id
GET http://localhost:3000/apicontenido/generos/23

### Get generos por Id
GET http://localhost:3000/apicontenido/generos/24

### Get generos por Id
GET http://localhost:3000/apicontenido/generos/25

### Get generos por Id
GET http://localhost:3000/apicontenido/generos/26


### Actualizar un genero totalmente 
PUT http://localhost:3000/apicontenido/generos/25
Content-Type: application/json

{
  "nombre": "comi-trágico-griego"
}

### Delete generos por Id
# Si el genero está usado en la tabla contenido_generos, da un error!
DELETE http://localhost:3000/apicontenido/generos/26







################################
##  CATEGORIAS
################################


### Get de todos las categorias
GET http://localhost:3000/apicontenido/categorias

### Get categorias por Id
GET http://localhost:3000/apicontenido/categorias/2

### Crear una categorias
POST http://localhost:3000/apicontenido/categorias
Content-Type: application/json

{
  "nombre": "Documental"
}

### Actualizar una categorias totalmente 
PUT http://localhost:3000/apicontenido/categorias/3
Content-Type: application/json

{
  "nombre": "Documental-serie-galaxia"
}

### Actualizar una categorias parcialmente
PATCH http://localhost:3000/apicontenido/categorias/3
Content-Type: application/json

{
  "nombre": "Documental-serie-galaxia2"
}

### Actualizar una categorias parcialmente con datos invalidos
PATCH http://localhost:3000/apicontenido/categorias/3
Content-Type: application/json

{
  "nombres": "ssss"
}

### Actualizar una categorias parcialmente con datos vacios
PATCH http://localhost:3000/apicontenido/categorias/3
Content-Type: application/json

{
  "nombre": ""
}

### DELETE categorias por Id
DELETE http://localhost:3000/apicontenido/categorias/3







################################
##  ACTORES
################################

### Get de todos los actores
GET http://localhost:3000/apicontenido/actores

### Get actor por Id
GET http://localhost:3000/apicontenido/actores/840

### Crear un actor
POST http://localhost:3000/apicontenido/actores
Content-Type: application/json

{
  "nombre": "Gustavo Torrente"
}

### Actualizar un actor totalmente 
PUT http://localhost:3000/apicontenido/actores/840
Content-Type: application/json

{
  "nombre": "Gustavo Torrente Nuñez"
}

### Actualizar un actor parcialmente
PATCH http://localhost:3000/apicontenido/actores/840
Content-Type: application/json

{
  "nombre": "Gustavo Torrente Nuñez Quijada"
}

### Actualizar un actor parcialmente con datos invalidos
PATCH http://localhost:3000/apicontenido/actores/840
Content-Type: application/json

{
  "nombres": "ssss"
}

### Actualizar un actor parcialmente con datos vacios
PATCH http://localhost:3000/apicontenido/actores/840
Content-Type: application/json

{
  "nombre": ""
}


################################
##  GENEROS
################################

### Get de todos los generos
GET http://localhost:3000/apicontenido/generos

### Get genero por Id
GET http://localhost:3000/apicontenido/generos/20


### Get genero por Id y sus contenidos
GET http://localhost:3000/apicontenido/generos/30/contenido 


### Crear un genero
POST http://localhost:3000/apicontenido/generos
Content-Type: application/json

{
  "nombre": "Tragedia"
}

### Actualizar un genero totalmente 
PUT http://localhost:3000/apicontenido/generos/20
Content-Type: application/json

{
  "nombre": "Tragedia Griega"
}

### Actualizar un genero parcialmente
PATCH http://localhost:3000/apicontenido/generos/20
Content-Type: application/json

{
  "nombre": "Tragedia Griega"
}

### Actualizar un genero parcialmente con datos vacios
PATCH http://localhost:3000/apicontenido/generos/840
Content-Type: application/json

{
  "nombre": ""
}
